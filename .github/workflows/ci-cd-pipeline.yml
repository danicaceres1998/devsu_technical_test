# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
name: "CI-CD Pipeline"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11.3"]
    env:
      PORT: 5000
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # Database setup
      - name: Set up database schema
        run: |
          python manage.py makemigrations
          python manage.py migrate
      # Run Tests
      - name: Run Tests
        run: python manage.py test
      # Docker image build & push  
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Git short sha
        id: git_context
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile \
            -t danicaceres1998/devsu-python:${{ steps.git_context.outputs.branch }}-${{ steps.git_context.outputs.short_sha }}
          docker push danicaceres1998/devsu-python --all-tags
      # Snyk image scanner
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: danicaceres1998/devsu-python:${{ steps.git_context.outputs.branch }}-${{ steps.git_context.outputs.short_sha }}
  deploy:
    if: github.ref_name == 'main'
    needs: [test]
    name: "Build and deploy"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Git short sha
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      # Config & Login to GCloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          version: '>= 440.0.0'
      - name: Install gcloud auth
        run: gcloud components install gke-gcloud-auth-plugin
      - name: Connect to the cluster
        run: gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project cohesive-slate-394401
      # Deploy to K8s
      - name: Deploy to DigitalOcean Kubernetes
        run: |
          kubectl set image deployment/devsu-python-mcs \
            devsu-python-mcs=danicaceres1998/devsu-python:main-${{ steps.vars.outputs.sha_short }} \
            -n devsu-python
